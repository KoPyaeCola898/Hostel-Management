<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label41.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>